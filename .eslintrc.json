{
  "overrides": [
    {
      "files": ["packages/client/**/*.ts", "packages/client/**/*.tsx"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended"
      ],
      "plugins": ["react-refresh"],
      "parser": "@typescript-eslint/parser",
      "globals": {
        "React": "readonly"
      },
      "rules": {
        "no-unused-vars": [
          1,
          { "args": "after-used", "argsIgnorePattern": "^_" }
        ],
        "react-refresh/only-export-components": "warn",
        "react/prefer-stateless-function": "error",
        "react/button-has-type": "error",
        "react/no-unused-prop-types": "error",
        "react/jsx-pascal-case": "error",
        "react/jsx-no-script-url": "error",
        "react/no-children-prop": "error",
        "react/no-danger": "error",
        "react/no-danger-with-children": "error",
        "react/no-unstable-nested-components": [
          "error",
          { "allowAsProps": true }
        ],
        "react/jsx-fragments": "error",
        "react/destructuring-assignment": [
          "error",
          "always",
          { "destructureInSignature": "always" }
        ],
        "react/jsx-no-leaked-render": [
          "error",
          { "validStrategies": ["ternary"] }
        ],
        "react/jsx-max-depth": ["error", { "max": 5 }],
        "react/function-component-definition": [
          "warn",
          { "namedComponents": "arrow-function" }
        ],
        "react/jsx-key": [
          "error",
          {
            "checkFragmentShorthand": true,
            "checkKeyMustBeforeSpread": true,
            "warnOnDuplicates": true
          }
        ],
        "react/jsx-no-useless-fragment": "warn",
        "react/jsx-curly-brace-presence": "warn",
        "react/no-typos": "warn",
        "react/display-name": "warn",
        "react/self-closing-comp": "warn",
        "react/jsx-sort-props": "warn",
        "react/react-in-jsx-scope": "off",
        "react/jsx-one-expression-per-line": "off",
        "react/prop-types": "off",
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "default",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "variable",
            // Specify PascalCase for React components
            "format": ["PascalCase", "camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "property",
            "format": null,
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          }
        ]
      },
      "settings": {
        "react": {
          "version": "detect"
        }
      }
    },
    {
      "env": {
        "node": true,
        "commonjs": true,
        "es2021": true,
        "jest": true
      },
      "files": ["packages/server/**/*.ts"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "eslint:recommended"
      ],
      "parser": "@typescript-eslint/parser",
      "rules": {
        // "no-console": "warn",
        //* Avoid Bugs
        "no-undef": "error",
        "semi": "error",
        "semi-spacing": "error",
        //* Best Practices
        "eqeqeq": "warn",
        "no-invalid-this": "off",
        "no-return-assign": "error",
        "no-unused-expressions": ["error", { "allowTernary": true }],
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "no-constant-condition": "warn",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": [
          1,
          {
            "args": "after-used",
            "argsIgnorePattern": "^_"
          }
        ],
        //* Enhance Readability
        "indent": ["error", 2, { "SwitchCase": 1 }],
        "no-mixed-spaces-and-tabs": "warn",
        "space-before-blocks": "error",
        "space-in-parens": "error",
        "space-infix-ops": "error",
        "space-unary-ops": "error",
        // "quotes": ["error", "single"],
        "max-len": ["error", { "code": 200 }],
        "max-lines": ["error", { "max": 500 }],
        "keyword-spacing": "error",
        "multiline-ternary": ["error", "never"],
        "no-mixed-operators": "error",
        //
        "no-multiple-empty-lines": ["error", { "max": 2, "maxEOF": 1 }],
        "no-whitespace-before-property": "error",
        "nonblock-statement-body-position": "error",
        "object-property-newline": [
          "error",
          { "allowAllPropertiesOnSameLine": true }
        ],
        //* ES6
        "arrow-spacing": "error",
        "no-confusing-arrow": "error",
        "no-duplicate-imports": "error",
        "no-var": "error",
        "object-shorthand": "off",
        "prefer-const": "error",
        "prefer-template": "warn"
      }
    }
  ]
}
